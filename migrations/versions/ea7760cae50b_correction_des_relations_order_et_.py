"""Correction des relations Order et OrderDetail

Revision ID: ea7760cae50b
Revises: 21f30ce6f9a1
Create Date: 2025-03-09 11:19:34.195102

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ea7760cae50b'
down_revision = '21f30ce6f9a1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orders')
    op.drop_table('books')
    with op.batch_alter_table('Orders', schema=None) as batch_op:
        batch_op.alter_column('order_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=True)
        batch_op.alter_column('total_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)

    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.alter_column('user_firstname',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('user_lastname',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('user_email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('user_signup_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)

    with op.batch_alter_table('order_details', schema=None) as batch_op:
        batch_op.alter_column('unit_price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('order_details', schema=None) as batch_op:
        batch_op.alter_column('unit_price',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)

    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.alter_column('user_signup_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
        batch_op.alter_column('user_email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('user_lastname',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('user_firstname',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    with op.batch_alter_table('Orders', schema=None) as batch_op:
        batch_op.alter_column('total_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('order_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=False)

    op.create_table('books',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='books_pkey')
    )
    op.create_table('orders',
    sa.Column('order_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], name='orders_user_id_fkey1'),
    sa.PrimaryKeyConstraint('order_id', name='orders_pkey1')
    )
    # ### end Alembic commands ###
